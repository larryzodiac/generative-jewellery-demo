{"version":3,"sources":["components/algorithm/structure-query-functions.js","components/algorithm/loop.js","components/Scene.js","components/input/Radio_.js","components/GeometryList.js","components/input/Slider_.js","components/FunctionList.js","App.js","index.js"],"names":["processEdgeLoop","v1","v2","oldVertices","sourceEdges","currentFace","metaVertices","edge","vertexIndexA","Math","min","vertexIndexB","max","key","a","b","newEdgePoint","faces","push","edges","newFace","newFaces","c","materialIndex","THREE","undefined","getEdge","createNewUv","newUvs","clone","midpoint","abs","SubdivisionModifier","subdivisions","adjacent_weight","edge_point_weight","connecting_edges_weight","Object","classCallCheck","this","prototype","modify","geometry","mergeVertices","iterations","i","subdivide","computeFaceNormals","computeVertexNormals","newVertices","sourceVertices","vertices","sourceFaces","sourceUvs","faceVertexUvs","vertexHolder","hasUvs","length","sourceVerticesRelationships","Array","oldFaces","sourceEges","generateLookupsLoop","oppositePoint","currentEdge","face","connectedFaces","connectingEdge","connectingPoint","connectingEdges","oldVertex","newSourceVertex","newEdgeVertices","adjacentVertexWeight","edgeVertexWeight","faceVertices","addVectors","multiplyScalar","set","j","k","add","beta","sourceVertexWeight","connectingVertexWeight","newSourceVertices","numberOfConnectingEdges","concat","edge1","edge2","edge3","uv","x0","x1","x2","sl","x3","x4","x5","x","y","scene","camera","renderer","controls","shape","smooth","exportSTL","require","OrbitControls","Scene","props","_this","possibleConstructorReturn","getPrototypeOf","call","start","frameId","requestAnimationFrame","update","stop","cancelAnimationFrame","render","window","handleResize","width","innerWidth","height","innerHeight","setSize","aspect","updateProjectionMatrix","getGeometry","w","h","getPlane","material","side","color","setHex","mesh","rotation","position","receiveShadow","generateSubdivision","modifier","wireframe","params","parameters","scale","setScalar","meshScale","name","castShadow","export","buffer","fromGeometry","blob","Blob","type","mimeType","saveAs","bind","assertThisInitialized","background","z","lookAt","hemisphereLight","hemiLightHelper","directionalLight","shadow","mapSize","near","far","dirLightHeper","plane","antialias","shadowMap","enabled","domElement","enablePan","enableKeys","enableDamping","dampingFactor","rotateSpeed","maxDistance","minDistance","maxPolarAngle","addEventListener","mount","appendChild","prevProps","remove","dispose","exportClicked","removeEventListener","removeChild","_this2","react_default","createElement","className","ref","Component","Radio_","react_list_dist","primaryText","meta","react_radio_dist_default","wrapperClasses","react_radio_dist","value","id","onChange","GeometryList","state","checked","geometries_list","image","map","g","input_Radio_","Fragment","react_checkbox_dist_default","Slider_","sliderRef","React","createRef","slider","MDCSlider","current","label","Slider_default","classes","thumb","trackBefore","step","aria-labelledby","tabIndex","role","aria-valuemin","aria-valuemax","aria-valuenow","aria-label","cx","cy","r","FunctionList","functions_list","f","input_Slider_","App","toggleDrawer","setState","prevState","drawerOpen","handleChange","event","slider_value","target","defineProperty","handleClick","react_drawer_dist_default","dismissible","open","react_drawer_dist","tag","react_list_dist_default","nonInteractive","components_GeometryList","components_FunctionList","react_button_dist_default","outlined","onClick","dist_default","title","navigationIcon","react_material_icon_dist_default","icon","dist","components_Scene","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8a1901c5.chunk.js","sourcesContent":["/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  Three.js\r\n*/\r\n\r\nimport * as THREE from 'three';\r\n\r\n/*\r\n  Catmull-Clark\r\n*/\r\nexport const generateLookupsCat = (sourceVertices, sourceFaces, oldVerticesRelationships, sourceEdges) => {\r\n  for (let i = 0; i < sourceVertices.length; i++) {\r\n    oldVerticesRelationships[i] = {vertex:sourceVertices[i], edges:[]};\r\n  }\r\n  for (let i = 0; i < sourceFaces.length; i++) {\r\n    processEdgeCat(sourceFaces[i].a, sourceFaces[i].b, sourceVertices, sourceEdges, sourceFaces[i], oldVerticesRelationships);\r\n    processEdgeCat(sourceFaces[i].b, sourceFaces[i].c, sourceVertices, sourceEdges, sourceFaces[i], oldVerticesRelationships);\r\n    processEdgeCat(sourceFaces[i].c, sourceFaces[i].a, sourceVertices, sourceEdges, sourceFaces[i], oldVerticesRelationships);\r\n  }\r\n}\r\n\r\nexport const processEdgeCat = (v1, v2, sourceVertices, sourceEdges, currentFace, metaVertices) => {\r\n  const vertexIndexA = Math.min(v1, v2);\r\n  const vertexIndexB = Math.max(v1, v2);\r\n  const key = vertexIndexA + \"_\" + vertexIndexB;\r\n  let edge;\r\n  if (key in sourceEdges) {\r\n    edge = sourceEdges[key];\r\n  } else {\r\n    const vertexA = sourceVertices[vertexIndexA];\r\n    const vertexB = sourceVertices[vertexIndexB];\r\n    edge = {\r\n      a: vertexA,\r\n      b: vertexB,\r\n      edgePoint: null,\r\n      midPoint: null,\r\n      faces: []\r\n    };\r\n    sourceEdges[key] = edge;\r\n  }\r\n  const triangle = new THREE.Triangle(sourceVertices[currentFace.a], sourceVertices[currentFace.b], sourceVertices[currentFace.c]);\r\n  let facePoint = new THREE.Vector3();\r\n  triangle.getMidpoint(facePoint);\r\n  edge.faces.push({currentFace, facePoint});\r\n  metaVertices[v1].edges.push(edge);\r\n}\r\n\r\nexport const getFacePoint = (a,b,c,sourceEdges,facePoints) => {\r\n  const vertexIndexA = Math.min(a, b);\r\n  const vertexIndexB = Math.max(a, b);\r\n  const key = vertexIndexA + \"_\" + vertexIndexB;\r\n  const currentEdge = sourceEdges[key];\r\n  for (let i = 0; i < currentEdge.faces.length; i++) {\r\n    const currentFace = currentEdge.faces[i].currentFace;\r\n    if (currentFace.a === a && currentFace.b === b && currentFace.c === c) {\r\n      const matchedFacePoint = currentEdge.faces[i].facePoint\r\n      for (let i = 0; i < facePoints.length; i++) {\r\n        if (matchedFacePoint.equals(facePoints[i])) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const getEdgePoint = (a, b, sourceEdges, edgePoints) => {\r\n  const vertexIndexA = Math.min(a, b);\r\n  const vertexIndexB = Math.max(a, b);\r\n  const key = vertexIndexA + \"_\" + vertexIndexB;\r\n  const matchedEdgePoint = sourceEdges[key].edgePoint;\r\n  for (let i = 0; i < edgePoints.length; i++) {\r\n    if (matchedEdgePoint.equals(edgePoints[i])) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createNewFace = (newFaces, a, b, c, d, materialIndex) => {\r\n  newFaces.push(new THREE.Face3(\r\n    a, b, d, undefined, undefined, materialIndex\r\n  ));\r\n  newFaces.push(new THREE.Face3(\r\n    a, c, d, undefined, undefined, materialIndex\r\n  ));\r\n}\r\n\r\n/*\r\n  loop\r\n*/\r\nexport const generateLookupsLoop = (oldVertices, oldFaces, metaVertices, sourceEges) => {\r\n  for (let i = 0; i < oldVertices.length; i++) {\r\n    metaVertices[i] = {edges:[]};\r\n  }\r\n  for (let i = 0; i < oldFaces.length; i++) {\r\n    processEdgeLoop(oldFaces[i].a, oldFaces[i].b, oldVertices, sourceEges, oldFaces[i], metaVertices);\r\n    processEdgeLoop(oldFaces[i].b, oldFaces[i].c, oldVertices, sourceEges, oldFaces[i], metaVertices);\r\n    processEdgeLoop(oldFaces[i].c, oldFaces[i].a, oldVertices, sourceEges, oldFaces[i], metaVertices);\r\n  }\r\n}\r\n\r\nexport const processEdgeLoop = (v1, v2, oldVertices, sourceEdges, currentFace, metaVertices) => {\r\n  const vertexIndexA = Math.min(v1, v2);\r\n  const vertexIndexB = Math.max(v1, v2);\r\n  const key = vertexIndexA + \"_\" + vertexIndexB;\r\n  let edge;\r\n  if (key in sourceEdges) {\r\n    edge = sourceEdges[key];\r\n  } else {\r\n    const vertexA = oldVertices[vertexIndexA];\r\n    const vertexB = oldVertices[vertexIndexB];\r\n    edge = {\r\n      a: vertexA,\r\n      b: vertexB,\r\n      newEdgePoint: null,\r\n      faces: []\r\n    };\r\n    sourceEdges[key] = edge;\r\n  }\r\n  edge.faces.push(currentFace);\r\n  metaVertices[v1].edges.push(edge);\r\n  metaVertices[v2].edges.push(edge);\r\n}\r\n\r\nexport const newFace = (newFaces, a, b, c, materialIndex) => newFaces.push(new THREE.Face3(a, b, c, undefined, undefined, materialIndex));\r\n\r\nexport const getEdge = (a, b, sourceEdges) => {\r\n  const vertexIndexA = Math.min(a, b);\r\n  const vertexIndexB = Math.max(a, b);\r\n  const key = vertexIndexA + \"_\" + vertexIndexB;\r\n  return sourceEdges[key];\r\n}\r\n\r\n/*\r\n  UVs\r\n*/\r\nexport const createNewUv = (newUvs, a, b, c) => {\r\n  newUvs.push( [ a.clone(), b.clone(), c.clone() ] );\r\n}\r\n\r\nexport const midpoint = (a, b) => (Math.abs(b - a) / 2) + Math.min(a, b);\r\n","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  loop.js\r\n*/\r\n\r\nimport * as THREE from 'three';\r\nimport {\r\n  generateLookupsLoop,\r\n  newFace,\r\n  getEdge,\r\n  createNewUv,\r\n  midpoint\r\n} from './structure-query-functions.js';\r\n\r\nclass SubdivisionModifier {\r\n  constructor(subdivisions, adjacent_weight, edge_point_weight, connecting_edges_weight) {\r\n    this.subdivisions = (subdivisions === undefined) ? 1 : subdivisions;\r\n    this.adjacent_weight = adjacent_weight;\r\n    this.edge_point_weight = edge_point_weight;\r\n    this.connecting_edges_weight = connecting_edges_weight;\r\n  }\r\n}\r\n\r\nSubdivisionModifier.prototype.modify = function(geometry) {\r\n  geometry = geometry.clone();\r\n\tgeometry.mergeVertices();\r\n  const iterations = this.subdivisions;\r\n  for (let i = 0; i < iterations; i++) {\r\n    this.subdivide(geometry);\r\n  }\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeVertexNormals();\r\n\treturn geometry;\r\n}\r\n\r\nSubdivisionModifier.prototype.subdivide = function(geometry) {\r\n  const sourceVertices = geometry.vertices;\r\n  const sourceFaces = geometry.faces;\r\n  const sourceUvs = geometry.faceVertexUvs[0];\r\n  let newVertices, newFaces, newUvs = [];\r\n  const vertexHolder = new THREE.Vector3();\r\n  const hasUvs = sourceUvs !== undefined && sourceUvs.length > 0;\r\n  const sourceVerticesRelationships = new Array(sourceVertices.length);\r\n  const sourceEdges = {};\r\n  generateLookupsLoop(sourceVertices, sourceFaces, sourceVerticesRelationships, sourceEdges);\r\n  const newEdgeVertices = [];\r\n  let oppositePoint;\r\n  let newEdgePoint;\r\n  const adjacentVertexWeight = this.adjacent_weight;\r\n  const edgeVertexWeight = this.edge_point_weight;\r\n  let currentEdge;\r\n  let face;\r\n  let connectedFaces;\r\n  const faceVertices = ['a','b','c'];\r\n  \r\n  for (let i in sourceEdges) {\r\n    currentEdge = sourceEdges[i];\r\n    newEdgePoint = new THREE.Vector3();\r\n    connectedFaces = currentEdge.faces.length;\r\n    newEdgePoint.addVectors(currentEdge.a, currentEdge.b).multiplyScalar(edgeVertexWeight);\r\n    vertexHolder.set(0, 0, 0);\r\n    for (let j = 0; j < connectedFaces; j ++) {\r\n      face = currentEdge.faces[j];\r\n      for (let k = 0; k < 3; k ++) {\r\n        oppositePoint = sourceVertices[face[faceVertices[k]]]; // a, b, c\r\n        if (oppositePoint !== currentEdge.a && oppositePoint !== currentEdge.b) break;\r\n      }\r\n      vertexHolder.add(oppositePoint);\r\n    }\r\n    vertexHolder.multiplyScalar(adjacentVertexWeight);\r\n    newEdgePoint.add(vertexHolder);\r\n    currentEdge.newEdgePoint = newEdgeVertices.length;\r\n    newEdgeVertices.push(newEdgePoint);\r\n  }\r\n\r\n  let connectingEdge, connectingPoint, connectingEdges;\r\n  let oldVertex, newSourceVertex;\r\n  const newSourceVertices = [];\r\n  let beta, sourceVertexWeight, connectingVertexWeight;\r\n\r\n  for (let i = 0; i < sourceVertices.length; i++) {\r\n    oldVertex = sourceVertices[i];\r\n    connectingEdges = sourceVerticesRelationships[i].edges;\r\n    const numberOfConnectingEdges = this.connecting_edges_weight;\r\n    beta = 3 / (8 * numberOfConnectingEdges);\r\n    connectingVertexWeight = beta;\r\n    sourceVertexWeight = 1 - numberOfConnectingEdges * beta;\r\n    newSourceVertex = oldVertex.clone().multiplyScalar(sourceVertexWeight);\r\n    vertexHolder.set(0, 0, 0);\r\n    for (let j = 0; j < numberOfConnectingEdges; j++) {\r\n      connectingEdge = connectingEdges[j];\r\n      connectingPoint = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\r\n      vertexHolder.add(connectingPoint);\r\n    }\r\n    vertexHolder.multiplyScalar(connectingVertexWeight);\r\n    newSourceVertex.add(vertexHolder);\r\n    newSourceVertices.push(newSourceVertex);\r\n  } // End for loop.\r\n\r\n  newVertices = newSourceVertices.concat(newEdgeVertices);\r\n  const sl = newSourceVertices.length;\r\n  let edge1, edge2, edge3;\r\n  newFaces = [];\r\n  let uv, x0, x1, x2;\r\n\tlet x3 = new THREE.Vector2();\r\n\tlet x4 = new THREE.Vector2();\r\n\tlet x5 = new THREE.Vector2();\r\n  \r\n  for (let i = 0; i < sourceFaces.length; i++) {\r\n    face = sourceFaces[i];\r\n    edge1 = getEdge(face.a, face.b, sourceEdges).newEdgePoint + sl;\r\n    edge2 = getEdge(face.b, face.c, sourceEdges).newEdgePoint + sl;\r\n    edge3 = getEdge(face.c, face.a, sourceEdges).newEdgePoint + sl;\r\n    // create 4 faces.\r\n    newFace(newFaces, edge1, edge2, edge3);\r\n    newFace(newFaces, face.a, edge1, edge3);\r\n    newFace(newFaces, face.b, edge2, edge1);\r\n    newFace(newFaces, face.c, edge3, edge2);\r\n    // create 4 new uv's\r\n\t\tif (hasUvs) {\r\n\t\t\tuv = sourceUvs[i];\r\n\t\t\tx0 = uv[0];\r\n\t\t\tx1 = uv[1];\r\n\t\t\tx2 = uv[2];\r\n\t\t\tx3.set(midpoint(x0.x, x1.x), midpoint(x0.y, x1.y));\r\n\t\t\tx4.set(midpoint(x1.x, x2.x), midpoint(x1.y, x2.y));\r\n\t\t\tx5.set(midpoint(x0.x, x2.x), midpoint(x0.y, x2.y));\r\n\t\t\tcreateNewUv(newUvs, x3, x4, x5);\r\n\t\t\tcreateNewUv(newUvs, x0, x3, x5);\r\n\t\t\tcreateNewUv(newUvs, x1, x4, x3);\r\n\t\t\tcreateNewUv(newUvs, x2, x5, x4);\r\n\t\t}\r\n  } // End for loop\r\n  geometry.vertices = newVertices;\r\n  geometry.faces = newFaces;\r\n  if (hasUvs) geometry.faceVertexUvs[0] = newUvs;\r\n}\r\n\r\nexport default SubdivisionModifier;","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  Three.js React Environment\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport SubdivisionModifier from './algorithm/loop';\r\nimport { saveAs } from 'file-saver';\r\nconst exportSTL = require('threejs-export-stl');\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\nlet scene, camera, renderer, controls;\r\nlet shape, smooth, geometry;\r\n\r\nclass Scene extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.getGeometry = this.getGeometry.bind(this);\r\n    this.generateSubdivision = this.generateSubdivision.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xffde03);\r\n    camera = new THREE.PerspectiveCamera(75, width / height, 1, 1000);\r\n    camera.position.z = 3;\r\n    camera.position.y = 1;\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n    // Lights\r\n  \tconst hemisphereLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n  \themisphereLight.position.set(0, 100, 0);\r\n  \tscene.add(hemisphereLight);\r\n    const hemiLightHelper = new THREE.HemisphereLightHelper(hemisphereLight, 10);\r\n\t\tscene.add(hemiLightHelper);\r\n    // Create a DirectionalLight and turn on shadows for the light\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.4);\r\n    directionalLight.position.set(-0.5, 1.75, 0.5);\r\n    directionalLight.position.multiplyScalar(50);\r\n    directionalLight.castShadow = true; // default false\r\n    scene.add(directionalLight);\r\n    // Set up shadow properties for the light\r\n    directionalLight.shadow.mapSize.width = 2048;\r\n    directionalLight.shadow.mapSize.height = 2048;\r\n    directionalLight.shadow.camera.near = 0.5;\r\n    directionalLight.shadow.camera.far = 500;\r\n    const dirLightHeper = new THREE.DirectionalLightHelper(directionalLight, 10);\r\n\t\tscene.add(dirLightHeper);\r\n    /*\r\n      Create Geometry here\r\n    */\r\n    const plane = this.getPlane(1000,1000);\r\n    scene.add(plane);\r\n    geometry = this.getGeometry(1);\r\n    shape = this.generateSubdivision(geometry); // This will be our subdivide geometry call\r\n    scene.add(shape);\r\n    // Magic - Create our WebGL render instance.\r\n    renderer = new THREE.WebGLRenderer({antialias:true});\r\n    renderer.setSize(width, height);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    // Orbit controls\r\n    controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enablePan = false;\r\n    controls.enableKeys = false;\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.rotateSpeed = 0.1;\r\n    controls.maxDistance = 5;\r\n    controls.minDistance = 2;\r\n    controls.maxPolarAngle = 1.8; // 103.132°\r\n    // Scalable canvas.\r\n    window.addEventListener('resize', this.handleResize);\r\n    //\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.renderer = renderer;\r\n    this.controls = controls;\r\n    this.shape = shape;\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.start();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props !== prevProps) {\r\n      // When radio shape changes -> remove + replace\r\n      scene.remove(shape);\r\n      shape.geometry.dispose();\r\n      shape.material.dispose();\r\n      //\r\n      geometry = this.getGeometry(1);\r\n      shape = this.generateSubdivision(geometry);\r\n      shape.material.wireframe = this.props.wireframe\r\n      scene.add(shape);\r\n    }\r\n    if (this.props.exportClicked !== prevProps.exportClicked) {\r\n      this.export(shape.geometry);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize');\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start = () => {\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.update);\r\n    }\r\n  }\r\n\r\n  stop = () => {\r\n    cancelAnimationFrame(this.frameId);\r\n  }\r\n\r\n  // Animation loop.\r\n  update = () => {\r\n    this.renderer.render(\r\n      this.scene,\r\n      this.camera\r\n    )\r\n    this.controls.update();\r\n    this.frameId = window.requestAnimationFrame(this.update);\r\n  }\r\n\r\n  // Resize canvas\r\n  handleResize = () => {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    this.renderer.setSize(width, height);\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  // Create a geometry for use in creating a mesh\r\n  getGeometry = (w,h) => {\r\n    let geometry;\r\n    switch (this.props.geometry) {\r\n      case 'Cone':\r\n        geometry = new THREE.ConeGeometry(w, h);\r\n        break;\r\n      case 'Cube':\r\n        geometry = new THREE.BoxGeometry(w, h);\r\n        break;\r\n      case 'Cylinder':\r\n        geometry = new THREE.CylinderGeometry(w, h);\r\n        break;\r\n      case 'Dodecahedron':\r\n        geometry = new THREE.DodecahedronGeometry(w, h);\r\n        break;\r\n      case 'Icosahedron':\r\n        geometry = new THREE.IcosahedronGeometry(w, h);\r\n        break;\r\n      case 'Octahedron':\r\n        geometry = new THREE.OctahedronGeometry(w, h);\r\n        break;\r\n      case 'Tetrahedron':\r\n        geometry = new THREE.TetrahedronGeometry(w, h);\r\n        break;\r\n      case 'Torus':\r\n        geometry = new THREE.TorusGeometry(w, h);\r\n        break;\r\n      default:\r\n        geometry = new THREE.BoxGeometry(w, h);\r\n    }\r\n    return geometry;\r\n  }\r\n\r\n  // Create a plane that receives shadows (but does not cast them)\r\n  getPlane = (w,h) => {\r\n    const geometry = new THREE.PlaneBufferGeometry(w,h);\r\n  \tconst material = new THREE.MeshPhongMaterial({side:THREE.DoubleSide});\r\n    material.color.setHex(0xffde03);\r\n  \tconst mesh = new THREE.Mesh(geometry,material);\r\n    mesh.rotation.x = -1.5708;\r\n    mesh.position.y = -2;\r\n    mesh.receiveShadow = true;\r\n  \treturn mesh;\r\n  }\r\n\r\n  // Pass geometry to be modified then return mesh to be added to the scene\r\n  generateSubdivision = (geometry) => {\r\n    // Invoke modifier\r\n    const modifier = new SubdivisionModifier(\r\n      this.props.subdivisions,\r\n      this.props.adjacent_weight,\r\n      this.props.edge_point_weight,\r\n      this.props.connecting_edges_weight\r\n    );\r\n    // Create material\r\n    const material = new THREE.MeshPhongMaterial({wireframe: this.props.wireframe});\r\n    material.color.setHex(0xff0266);\r\n    // Scaling\r\n    const params = geometry.parameters;\r\n    if ( params.scale ) {\r\n      geometry.scale( params.scale, params.scale, params.scale );\r\n    }\r\n    // Smoothing\r\n    smooth = modifier.modify(geometry);\r\n    const mesh = new THREE.Mesh(smooth, material);\r\n    mesh.scale.setScalar(params.meshScale ? params.meshScale : 1);\r\n    mesh.name = `${this.props.geometry}`\r\n    mesh.castShadow = true;\r\n    mesh.receiveShadow = false;\r\n    return mesh;\r\n  }\r\n\r\n  export = (geometry) => {\r\n    const buffer = exportSTL.fromGeometry(geometry);\r\n    const blob = new Blob([buffer], { type: exportSTL.mimeType });\r\n    saveAs(blob, 'shape.stl');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main\r\n        className=\"canvas\"\r\n        ref={mount => {\r\n          this.mount = mount\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  Radio_.js\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport Radio, { NativeRadioControl } from '@material/react-radio';\r\nimport { ListItem, ListItemText, ListItemMeta } from '@material/react-list';\r\n\r\nclass Radio_ extends Component {\r\n  render () {\r\n    return (\r\n      <ListItem className='drawer-list-item'>\r\n        <ListItemText primaryText={this.props.name} />\r\n        <ListItemMeta meta=\r\n          <Radio className='radio-alternate' wrapperClasses='mdc-list-item__meta'>\r\n            <NativeRadioControl\r\n              name='geometry'\r\n              value={this.props.name}\r\n              id={this.props.name}\r\n              onChange={this.props.onChange}\r\n            />\r\n          </Radio>\r\n        />\r\n      </ListItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radio_;","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  GeometryList.js\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { ListItem, ListItemText, ListItemMeta } from '@material/react-list';\r\nimport Checkbox from '@material/react-checkbox';\r\n// My components\r\nimport Radio from './input/Radio_';\r\n\r\nclass GeometryList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // Geometries contents\r\n    const geometries = [\r\n      {name:'Cone', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00153748_Profile.jpg'},\r\n      {name:'Cube', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00153748_Profile.jpg'},\r\n      {name:'Cylinder', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00150552_Profile.jpg'},\r\n      {name:'Dodecahedron', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00150552_Profile.jpg'},\r\n      {name:'Icosahedron', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00150552_Profile.jpg'},\r\n      {name:'Octahedron', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00153748_Profile.jpg'},\r\n      {name:'Tetrahedron', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00152737_Profile.jpg'},\r\n      {name:'Torus', image:'http://showcase.iadt.ie/assets/CC3/Headshot/N00153748_Profile.jpg'}\r\n    ];\r\n    // Passing Props to generate list\r\n    const geometries_list = geometries.map(g => {\r\n      return (\r\n        <Radio\r\n          key={g.name}\r\n          name={g.name}\r\n          image={g.image}\r\n          onChange={this.props.onChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {geometries_list}\r\n        <ListItem className='drawer-list-item'>\r\n          <ListItemText primaryText='Wireframe' />\r\n          <ListItemMeta meta=\r\n            <Checkbox\r\n              className='checkbox-alternate'\r\n              name='wireframe'\r\n              checked={this.state.checked}\r\n              value={this.state.checked}\r\n              onChange={this.props.onChange}\r\n            />\r\n          />\r\n        </ListItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeometryList;","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  Slider_.js\r\n*/\r\n\r\nimport React from 'react';\r\nimport { ListItem, ListItemText, ListItemMeta } from '@material/react-list';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport { MDCSlider } from '@material/slider';\r\n\r\nclass Slider_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n    };\r\n    this.sliderRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.slider = new MDCSlider(this.sliderRef.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem className='drawer-list-item'>\r\n          <ListItemText primaryText={this.props.label} />\r\n          <ListItemMeta meta={`${this.props.value}`} />\r\n        </ListItem>\r\n        <ListItem id={this.props.name} className='drawer-slider'>\r\n          <Slider classes={{thumb: 'drawer-slider-material', trackBefore: 'drawer-slider-material'}}\r\n            min={this.props.min}\r\n            max={this.props.max}\r\n            step={this.props.step}\r\n            value={this.props.value}\r\n            aria-labelledby='label'\r\n            onChange={this.props.onChange}\r\n          />\r\n        </ListItem>\r\n          <div ref={this.sliderRef} className=\"slider-div mdc-slider\" tabIndex=\"0\" role=\"slider\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"0\" aria-label=\"Select Value\">\r\n            <div className=\"mdc-slider__track-container\">\r\n              <div className=\"mdc-slider__track\"></div>\r\n            </div>\r\n            <div className=\"mdc-slider__thumb-container\">\r\n              <svg className=\"mdc-slider__thumb\" width=\"21\" height=\"21\">\r\n                <circle cx=\"10.5\" cy=\"10.5\" r=\"7.875\"></circle>\r\n              </svg>\r\n              <div className=\"mdc-slider__focus-ring\"></div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider_;\r\n","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  FunctionList.js\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\n// My components\r\nimport Slider from './input/Slider_';\r\n\r\nclass FunctionList extends Component {\r\n  render () {\r\n    // function options for slider\r\n    const functions = [\r\n      {label:'Subdivisions', name:'subdivisions', value:this.props.subdivisions, min:0, max:5, step:1},\r\n      {label:'Adjacent Weight', name:'adjacent_weight', value:this.props.adjacent_weight, min:0, max:1, step:null},\r\n      {label:'Edge-Point Weight', name:'edge_point_weight', value:this.props.edge_point_weight, min:0, max:1, step:null},\r\n      {label:'Connecting Edges Weight', name:'connecting_edges_weight', value:this.props.connecting_edges_weight, min:1, max:7, step:1}\r\n    ];\r\n    // Passing Props to generate list\r\n    const functions_list = functions.map(f => {\r\n      return (\r\n        <Slider\r\n          key={f.name}\r\n          label={f.label}\r\n          name={f.name}\r\n          value={f.value}\r\n          onChange={this.props.onChange}\r\n          min={f.min}\r\n          max={f.max}\r\n          step={f.step}\r\n        />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {functions_list}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FunctionList;\r\n","/*\r\n  Evan MacHale - N00150552\r\n  18.04.19\r\n  App.js\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\n// Material Design Components\r\nimport TopAppBar, {TopAppBarFixedAdjust} from '@material/react-top-app-bar';\r\nimport Drawer, {DrawerAppContent, DrawerContent, DrawerHeader, DrawerTitle} from '@material/react-drawer';\r\nimport List, { ListGroup, ListDivider } from '@material/react-list';\r\nimport Button from '@material/react-button';\r\nimport { ListItem } from '@material/react-list';\r\nimport MaterialIcon from '@material/react-material-icon';\r\n// My Components\r\nimport Scene from './components/Scene';\r\nimport GeometryList from './components/GeometryList';\r\nimport FunctionList from './components/FunctionList';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: true,\r\n      exportClicked: false,\r\n      // For the Scene\r\n      geometry: 'Cube',\r\n      wireframe: false,\r\n      subdivisions: 0,\r\n      adjacent_weight: 0.125,\r\n      edge_point_weight: 0.375,\r\n      connecting_edges_weight: 5\r\n    };\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState(prevState => ({\r\n      drawerOpen: !prevState.drawerOpen\r\n    }));\r\n  }\r\n\r\n  handleChange = (event, slider_value) => {\r\n    const id = event.target.id;\r\n    const name = event.target.type === 'checkbox' ? 'wireframe' : event.target.name;\r\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    // Truthy/falsy\r\n    if (slider_value || slider_value === 0) {\r\n      this.setState({\r\n        [id]: slider_value\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      exportClicked: prevState.exportClicked + 1\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='drawer-container'>\r\n        <Drawer\r\n          className='drawer-alternate'\r\n          dismissible={true}\r\n          open={this.state.drawerOpen}\r\n        >\r\n          <DrawerHeader className='drawer-title'>\r\n            <DrawerTitle tag='h2'>Menu</DrawerTitle>\r\n          </DrawerHeader>\r\n\r\n          <DrawerContent>\r\n            <ListGroup>\r\n              <List nonInteractive={true}>\r\n                <GeometryList\r\n                  geometry={this.state.geometry}\r\n                  wireframe={this.state.wireframe}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </List>\r\n              <ListDivider className='drawer-divider'/>\r\n              <List nonInteractive={true}>\r\n                <FunctionList\r\n                  subdivisions={this.state.subdivisions}\r\n                  adjacent_weight={this.state.adjacent_weight}\r\n                  edge_point_weight={this.state.edge_point_weight}\r\n                  connecting_edges_weight={this.state.connecting_edges_weight}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </List>\r\n              <ListDivider className='drawer-divider'/>\r\n              <List nonInteractive={true}>\r\n                <ListItem className='drawer-list-item'>\r\n                  <Button\r\n                    className='button-alternate-clear'\r\n                    outlined\r\n                    onClick={this.handleClick}\r\n                  >\r\n                    Download .stl\r\n                  </Button>\r\n                </ListItem>\r\n              </List>\r\n            </ListGroup>\r\n          </DrawerContent>\r\n        </Drawer>\r\n\r\n        <DrawerAppContent className='drawer-app-content'>\r\n          <TopAppBar\r\n            title='Generative Jewellery'\r\n            className = 'top-app-bar-alternate'\r\n            navigationIcon={<MaterialIcon\r\n              icon='menu'\r\n              onClick={this.toggleDrawer}\r\n            />}\r\n          />\r\n\r\n          <TopAppBarFixedAdjust>\r\n            <Scene\r\n              geometry={this.state.geometry}\r\n              subdivisions={this.state.subdivisions}\r\n              adjacent_weight={this.state.adjacent_weight}\r\n              edge_point_weight={this.state.edge_point_weight}\r\n              connecting_edges_weight={this.state.connecting_edges_weight}\r\n              wireframe={this.state.wireframe}\r\n              exportClicked={this.state.exportClicked}\r\n            />\r\n          </TopAppBarFixedAdjust>\r\n        </DrawerAppContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}